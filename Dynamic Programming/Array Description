#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int mod = 1e9 + 7;
 
void solve() {
    int n, m;
    cin >> n >> m;
    vector<int> x(n);
    for(int i = 0;i < n;i++) {
        cin >> x[i];
    }
    vector<vector<int>> dp(n, vector<int>(m + 1, 0));
    if(x[0] == 0) {
        for(int j = 1;j <= m;j++) {
            dp[0][j] = 1;
        }
    } else {
        dp[0][x[0]] = 1;
    }
    for(int i = 1;i < n;i++) {
        for(int j = 1;j <= m;j++) {
            if(x[i] != 0 && x[i] != j) continue;
 
            dp[i][j] = dp[i - 1][j];
            if(j) dp[i][j] = (dp[i][j] + dp[i - 1][j - 1]) % mod;
            if(j < m) dp[i][j] = (dp[i][j] + dp[i - 1][j + 1]) % mod;
        }
    }
    int res = 0;
    for(int j = 1;j <= m;j++) {
        res = (res + dp[n - 1][j]) % mod;
    }
    cout << res;
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
