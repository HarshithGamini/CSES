#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
// Knapsack DP
 
void solve() {
    int n, x;
    cin >> n >> x;
    vector<int> h(n);
    for(int i = 0;i < n;i++) {
        cin >> h[i];
    }
    vector<int> s(n);
    for(int i = 0;i < n;i++) {
        cin >> s[i];
    }
    vector<int> dp(x + 1);
    for(int i = 0;i < n;i++) {
        for(int j = x;j >= h[i];j--) {
            dp[j] = max(s[i] + dp[j - h[i]], dp[j]);
        }
    }
    cout << dp[x];
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
