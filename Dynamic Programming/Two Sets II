#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int mod = 1e9 + 7;
 
ll binpow(ll a, ll b, ll mod) {
    a %= mod;
    ll res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a % mod;
        a = a * a % mod;
        b >>= 1;
    }
    return res;
}
 
void solve() {
    int n;
    cin >> n;
    int sum = (n * (n + 1)) / 2;
    if(sum % 2 == 1) {
        cout << 0;
        return;
    }
    sum = sum / 2;
    vector<int> dp(sum + 1);
    dp[0] = 1;
    for(int i = 1;i <= n;i++) {
        for(int j = sum;j >= 1;j--) {
            if(j >= i) {
                (dp[j] += dp[j - i]) %= mod;
            } 
        }
    }
    cout << (dp[sum] * binpow(2, mod - 2, mod)) % mod << endl;
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
