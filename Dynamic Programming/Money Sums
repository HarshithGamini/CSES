#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void solve() {
    int n;
    cin >> n;
    vector<int> x(n);
    int sum = 0;
    for(int i = 0;i < n;i++) {
        cin >> x[i];
        sum += x[i];
    }
    vector<int> dp(sum + 1, 0);
    dp[0] = 1;
    for(int i = 0;i < n;i++) {
        for(int j = sum;j >= 0;j--) {
            if(j >= x[i]) dp[j] |= dp[j - x[i]];
        }
    }
    vector<int> res;
    for(int i = 1;i <= sum;i++) {
        if(dp[i]) res.push_back(i);
    }
    cout << res.size() << "\n";
    for(auto& r: res) {
        cout << r << " ";
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
