#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void solve() {
    int n, k;
    cin >> n >> k;
    vector<int> x(n);
    ll sum = 0;
    for(int i = 0;i < n;i++) {
        cin >> x[i];
        sum += x[i];
    }
    ll left = *max_element(x.begin(), x.end());
    ll right = sum;
    ll res = 0;
    while(left <= right) {
        ll mid = left + (right - left) / 2;
        ll cnt = 0, s = 0;
        for(int i = 0;i < n;i++) {
            if(s + x[i] > mid) {
                cnt++;
                s = 0;
            }
            s += x[i];
        }
        cnt++;
        if(cnt <= k) {
            res = mid;
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }
    cout << res << "\n";
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
