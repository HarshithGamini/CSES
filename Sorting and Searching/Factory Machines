#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void solve() {
    ll n, t;
    cin >> n >> t;
    vector<ll> k(n);
    for(ll i = 0;i < n;i++) {
        cin >> k[i];
    }
    ll low = 1, high = (*(min_element(k.begin(), k.end()))) * t;
    ll res;
    while(low <= high) {
        ll mid = low + (high - low) / 2;
        ll cnt = 0;
        for(ll i = 0;i < n;i++) {
            cnt += mid / k[i];
        }
        if(cnt >= t) {
            res = mid;
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    cout << res << "\n";
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
