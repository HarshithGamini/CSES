#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void solve() {
    int n;
    cin >> n;
    vector<vector<int>> events;
    for(int i = 0;i < n;i++) {
        int a, b;
        cin >> a >> b;
        events.push_back({a, 1, i});
        events.push_back({b + 1, -1, i});
    }
    sort(events.begin(), events.end()); 
    int cnt = 0;
    vector<int> res(n); 
    vector<int> a;
    for(auto& event: events) {
        int index = event[2];
        if(event[1] == 1) {
            cnt++;
            if(a.empty()) res[index] = cnt;
            else {
                res[index] = a.back();
                a.pop_back();
            }
        } else {
            cnt--;
            a.push_back(res[index]);
        }
    }
    int rooms = *max_element(res.begin(), res.end());
    cout << rooms << "\n";
    for(int i = 0;i < n;i++) {
        cout << res[i] << " ";
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
