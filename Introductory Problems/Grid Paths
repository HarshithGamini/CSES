#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
 
string s;
bool vis[7][7];
int res = 0;
 
bool e(int i, int j) {
    return i >= 0 && i < 7 && j >= 0 && j < 7 && !vis[i][j];
}
 
void dfs(int i, int j, int a = 0) {
    if(i == 6 && j == 0) {
        if(a == 48) {
            res++;
        }
        return;
    }
    vis[i][j] = 1;
    if(s[a] == '?' || s[a] == 'L') {
        if(e(i, j - 1)) {
            if(!(!e(i, j - 2) && e(i + 1, j - 1) && e(i - 1, j - 1)))
                dfs(i, j - 1, a + 1);
        }
    }
    if(s[a] == '?' || s[a] == 'R') {
        if(e(i, j + 1)) {
            if(!(!e(i, j + 2) && e(i + 1, j + 1) && e(i - 1, j + 1)))
                dfs(i, j + 1, a + 1);
        }
    }
    if(s[a] == '?' || s[a] == 'U') {
        if(e(i - 1, j)) {
            if(!(!e(i - 2, j) && e(i - 1, j + 1) && e(i - 1, j - 1)))
                dfs(i - 1, j, a + 1);
        }
    }
    if(s[a] == '?' || s[a] == 'D') {
        if(e(i + 1, j)) {
            if(!(!e(i + 2, j) && e(i + 1, j + 1) && e(i + 1, j - 1)))
                dfs(i + 1, j, a + 1);
        }
    }
    vis[i][j] = 0;
}
 
void solve() {
    cin >> s;
    dfs(0, 0);
    cout << res << "\n";
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
