#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<char>> grid(n, vector<char>(m));
    vector<vector<int>> color(n, vector<int>(m));
    for(int i = 0;i < n;i++) {
        for(int j = 0;j < m;j++) {
            cin >> grid[i][j];
            color[i][j] = (i + j) % 2;
        }
    }
 
    for(int i = 0;i < n;i++) {
        for(int j = 0;j < m;j++) {
            if(color[i][j] & 1) {
                if(grid[i][j] == 'A') {
                    cout << 'B';
                } else {
                    cout << 'A';
                }
            } else {
                if(grid[i][j] == 'C') { 
                    cout << 'D';
                } else {
                    cout << 'C';
                }
            }
        }
        cout << '\n';
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
