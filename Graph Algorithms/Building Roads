#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void dfs(int i, vector<vector<int>>& adj, vector<int>& vis) {
    vis[i] = 1;
    for(auto& it: adj[i]) {
        if(!vis[it]) {
            dfs(it, adj, vis);
        }
    }
}
 
void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<int>> adj(n);
    for(int i = 0;i < m;i++) {
        int a, b;
        cin >> a >> b;
        a--, b--;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    vector<int> ans;
    vector<int> vis(n, 0);
    for(int i = 0;i < n;i++) {
        if(!vis[i]) {
            ans.push_back(i);
            dfs(i, adj, vis);
        }
    }
    int sz = ans.size();
    cout << sz - 1 << "\n";
    for(int i = 1;i < sz;i++) {
        cout << ans[0] + 1 << " " << ans[i] + 1 << "\n";
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
