#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void dfs(int u, int cnt,  bool& flag, vector<int>& c, vector<vector<int>>& adj) {
    if(!flag) return;
    if(c[u] != -1) {
        if(c[u] != cnt) flag = false;
        return;
    }
    c[u] = cnt;
    for(auto& v: adj[u]) {
        dfs(v, 1 - cnt, flag, c, adj);
    }
}
 
void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<int>> adj(n);
    for(int i = 0;i < m;i++) {
        int a, b;
        cin >> a >> b;
        a--, b--;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    vector<int> c(n, -1);
    bool flag = true;
    for(int i = 0;i < n;i++) {
        if(c[i] < 0) {
            dfs(i, 0, flag, c, adj);
        }
    }
    if(!flag) {
        cout << "IMPOSSIBLE";
    } else {
        for(int i = 0;i < n;i++) {
            cout << c[i] + 1 << " ";
        }
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
