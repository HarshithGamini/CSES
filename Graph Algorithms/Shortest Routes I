#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<pair<ll,ll>>> adj(n);
    for(int i = 0;i < m;i++) {
        ll a, b, c;
        cin >> a >> b >> c;
        a--, b--;
        adj[a].push_back({b, c});
    }
    vector<ll> dist(n, 1e18);
    priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<>> pq;
    dist[0] = 0;
    pq.push({0, 0});
    while(!pq.empty()) {
        auto [d, u] = pq.top();
        pq.pop();
        if(d > dist[u]) continue;
        for(auto& [v, e]: adj[u]) {
            if(e + dist[u] < dist[v]) {
                dist[v] = e + dist[u];
                pq.push({dist[v], v});
            }
        }
    }
    for(auto& d: dist) {
        cout << d << " ";
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
