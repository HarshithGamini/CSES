#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

void dfs(int u, vector<int>& vis, vector<vector<ll>>& adj) {
    vis[u] = 1;
    for(auto& v: adj[u]) {
        if(!vis[v]) {
            dfs(v, vis, adj);
        }
    }
}

void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<ll>> edges;
    vector<vector<ll>> adj(n);
    vector<vector<ll>> adj2(n);
    for(int i = 0;i < m;i++) {
        ll a, b, x;
        cin >> a >> b >> x;
        a--, b--;
        edges.push_back({a, b, x});
        adj[a].push_back(b);
        adj2[b].push_back(a);
    }
    vector<int> vis(n, 0);
    vector<int> vis2(n, 0);
    dfs(0, vis, adj);
    dfs(n - 1, vis2, adj2);

    vector<ll> dist(n, -1e18);
    dist[0] = 0;
    for(int i = 0;i < n;i++) {
        for(auto& e: edges) {
            ll a = e[0];
            ll b = e[1];
            ll x = e[2];
            if(dist[a] + x > dist[b]) {
                dist[b] = dist[a] + x;
                if(i == n - 1 && vis[b] && vis2[b]) {
                    cout << -1 << "\n";
                    return;
                }
            }
        } 
    }
    cout << dist[n - 1] << "\n";
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
