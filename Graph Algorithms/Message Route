#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
 
typedef long long ll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
void solve() {
    int n, m;
    cin >> n >> m;
    vector<vector<int>> adj(n);
    for(int i = 0;i < m;i++) {
        int a, b;
        cin >> a >> b;
        a--, b--;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    vector<int> p(n, -1);
    queue<int> q;
    q.push(0);
    while(!q.empty()) {
        int u = q.front();
        q.pop();
        for(auto& v: adj[u]) {
            if(p[v] < 0) {
                p[v] = u;
                q.push(v);
            }
        }
    }
    if(p[n - 1] < 0) {
        cout << "IMPOSSIBLE"; 
    } else {
        int u = n - 1;
        vector<int> res;
        while(u) {
            res.push_back(u);
            u = p[u];
        }
        res.push_back(0);
        reverse(res.begin(), res.end());
        int min_nodes = res.size();
        cout << min_nodes << "\n";
        for(auto& node: res) {
            cout << node + 1 << " ";
        }
    }
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    int t = 1;
    //cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
